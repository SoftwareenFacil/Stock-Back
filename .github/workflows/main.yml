name: CI/CD backend 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      IMAGE_NAME: eic-backend
      FOLDER_NAME: EIC_Back
      DB_NAME: defaultdb
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Editing connectionString
        uses: microsoft/variable-substitution@v1 
        with:
          files: '${{ env.FOLDER_NAME }}/appsettings.json'
        env:
          ConnectionStrings.WebApiDatabase: ${{ secrets.CONNECTION_STRING }}

      - name: Build Docker Image
        run: 
          docker build --build-arg ASPNETCORE_ENVIRONMENT=Production -t ${{env.IMAGE_NAME}} .

        
      - name: Push Docker Image to Registry
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker create --name temp-container ${{env.IMAGE_NAME}}
          docker tag ${{env.IMAGE_NAME}} ${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{env.IMAGE_NAME}}:latest
             

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ~
            docker-compose -f docker-compose.backend.yml down
            docker-compose -f docker-compose.backend.yml pull
            docker-compose -f docker-compose.backend.yml up -d
            echo "Container deployed"
           

